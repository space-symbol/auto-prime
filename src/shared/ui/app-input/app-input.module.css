.inputContainer {
    position: relative;
    border-radius: 0.25rem;
    width: auto;
    margin-bottom: 0.5em;
    margin-top: 3px;

    @apply text-foreground;


    .input {
        font: inherit;
        width: 100%;
        height: 100%;
        padding: 0.5rem;
        text-align: inherit;
        position: relative;
        border-radius: inherit;
        z-index: 1;
        border: none;
        background-color: transparent;
        
        &[type='number'] {
            appearance: textfield;
        }

        &::-webkit-outer-spin-button,
        &::-webkit-inner-spin-button {
            appearance: none;
            margin: 0;
        }

        &:focus {
            outline: none;
        }
    }

    .wrapper {
        position: absolute;
        inset: -0.3rem 0 0;
        min-width: 0;
        padding: 0 0.5rem;
        pointer-events: none;
        border-radius: inherit;
        overflow: hidden;
        text-overflow: ellipsis;
        z-index: var(--input-label-z-index);
        
        @apply border border-foreground-secondary;

        .legend {
            height: 0.8rem;
            white-space: nowrap;
            display: flex;
            align-items: center;
            justify-content: flex-start;
            visibility: hidden;
            width: 0.01px;

            span {
                width: 100%;
            }
        }
    }

    .inputLabel {
        position: absolute;
        left: 0;
        padding: 0 0.5rem;
        top: 0;
        bottom: 0;
        display: flex;
        align-items: center;
        animation: 0.2s show-placeholder forwards ease;
        pointer-events: none;
        user-select: none;
        text-overflow: ellipsis;
        overflow: hidden;
        max-width: 100%;
        z-index: var(--input-label-z-index);
        background-color: transparent;

        .labelText {
            @apply text-foreground-secondary;
        }
    }

    &:has(textarea.input) {
        .inputLabel {
            align-items: start;
        }
    }

    &:has(input:read-only){
        .wrapper {
            @apply border-none;
            
        }

        .input {
              cursor: default;  
        }
    }

    &.filled, &:has(.input:focus, .input:-webkit-autofill, .input:autofill, .input[type='datetime-local'], .input[type='date']) {
            .inputLabel {
                font-size: 0.7rem;
                top: -0.6em;
                align-items: flex-start;
                margin: 0;
                animation: 0.2s show-label forwards ease;
                max-width: calc(100% - 1rem - 2px);
                right: 0;
    
                .labelText {
                    padding: 0 4px;

                    @apply text-foreground;
                }
            }

            .wrapper {
                font-size: 0.7rem;
                border-color: hsl(var(--gray-dark-color));
                
                .legend {
                    max-width: calc(100% - 1rem);
                    padding: 0 3px;
                    width: auto;
                }
            }

            &.error {
                .wrapper {
                    @apply text-warning;
                }
            }
        }
    
    &:has(.input:focus) {
        .wrapper {
            border-width: 2px;
        }

        .inputLabel {
            .labelText {
                @apply text-accent;

                padding: 0 4px;
            }

            font-weight: bold;
        }

        &.error {
            .inputLabel {
                color: var(--destructive-color);
            }
        }
    }
    
    &.fullwidth {
        width: 100%;
    }

    &.error {
        .errorText {
            position: absolute;
            font-size: 0.7rem;
            bottom: -1.5em;
            left: 2px;
            font-weight: bold;
            white-space: nowrap;
        }
    }

    &.search {
        margin: 0;
    }
    
    &.nolabel {
        .wrapper {
            inset: 0 !important;

            .legend {
                display: none;
            }
        }
    }
}

.inputFileContainer {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    position: relative;
    border: 0.1rem dashed hsl(var(--foreground));
    margin-bottom: 1.5em;

    .inputFile {
        display: none;
    }


    &.dragging{
        .inputLabel{
            border: 0.1rem dashed var(--purple-color);
        }

        .labelText {
           color: var(--purple-color);
        }
    }
    

    .inputLabel {
        position: absolute;
        cursor: pointer;
        display: flex;
        flex-shrink: 0;
        inset: 0;
        z-index: 1;
        align-items: center;
        justify-content: center;
        color: hsl(var(--foreground));
        font-weight: bold;
        text-overflow: ellipsis;
        width: 100%;
        border-radius: 0.25rem;
        height: auto;
        flex-grow: 1;
        min-height: 10rem;
        transition: border-color 0.2s ease-out;


        .labelText {
            user-select: none;
            pointer-events: none;
            display: block;
            padding: 1rem;
            animation: 0.2s show-placeholder forwards ease;
            text-align: center;
            transition: color 0.3s ease-out;
        }

        &:focus {
            @apply border-solid border-foreground;

            outline: none;

            .labelText {
                @apply text-foreground
            }
        }
    }

    .files {
        display: grid;
        overflow: auto;
        height: 100%;
        grid-template-columns: repeat(auto-fill, minmax(9rem, 1fr));
        grid-auto-rows: 13rem;
        gap: 1rem;
        border-radius: 0.25rem;
        padding: 0.5rem;
        transition: all 0.3s ease-out;
        position: relative;

        @apply rounded-sm;
    }

    .filePreviewCard {
        @apply grid grid-cols-1 grid-rows-5; 

        max-width: 32rem;
        flex-direction: column;
        padding: 0.5rem;
        position: relative;
        gap: 0.2rem;
        z-index: 2;
        overflow: hidden;
    }

    .fileImage {
        height: 100%;
        width: 100%;
        flex-grow: 1;
        object-fit: cover;
        align-self: center;
        user-select: none;
        pointer-events: none;

        @apply row-span-3;

    }

    .fileName {
        @apply row-span-1;

        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        font-weight: 400;
        font-size: 0.9em;
        height: 2em;
    }

    &.error{
        .errorText {
            position: absolute;
            font-size: 0.9em;
            bottom: -1.2rem;
            left: 2px;
            z-index: 1;
            line-height: 1em;
        }
    }

    .filesInfo {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.8em;
        position: absolute;
        bottom: -1.6em;
        left: 0;
        user-select: none;
    }
         
    .fileSize{
        font-size: 0.8em;
        right: 0.5rem;
        padding-right: 0.2rem;
        text-align: right;

        @apply text-foreground-secondary
    }

    @media screen and (width <= 425px) {
        &.files {
                grid-template-columns: 1fr 1fr;
        }
    }
}

.asterisk {
    @apply text-warning;
}

.error{
    &, &.filled {
        .inputLabel {
            .labelText {
                @apply text-warning;
            }    
        }

        .files, .wrapper {
            @apply border-warning;
            
        }
    
        .errorText {
            @apply text-warning;
        }
    }
}

@keyframes show-label {
    0% {
        opacity: 0;
        transform: translateY(-1em);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes show-placeholder {
    0% {
        opacity: 0;
        transform: translateY(-1em);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}